<% if @deploy.waiting_for_buddy? && @deploy.stage.send_flowdock_notifications? %>
  <%= form_tag flowdock_notify_path(deploy_id: @deploy.id+1000) do %>
    <div class="panel panel-info">
      <div class="panel-heading">
        <h3 class="panel-title">Request a buddy!</h3>
      </div>
      <div class="panel-body">
        <div class="col-sm-10">
          <div class="mentions-input-box">
            <%= text_area_tag :message, default_flowdock_message(@deploy), id: :buddy_request_box %>
          </div>
          <em>This will send a buddy request to the <strong><%= @deploy.stage.enabled_flows_names.join(', ') %></strong> flows.</em>
        </div>
        <div class="col-sm-2">
          <%= submit_tag 'Request a Buddy!', class: "btn btn-primary" %>
        </div>
      </div>
    </div>
  <% end %>

  <script>
    $(function(){
      var $input = $('#buddy_request_box');

      // when user hits 'Request', normalize and submit via ajax
      var $form = $input.parents('form');
      $form.submit(function(e){
        e.preventDefault();

        // normalize mentioned users @[alex](user:1) -> @alex
        $input.mentionsInput('val', function(text){
          $input.val(text.replace(/@\[([^\\]+?)\]\(([^)]+?)\)/g, "@$1"));
        });

        // submit it without leaving the page
        $.ajax({
          url: $form.attr('action'),
          type: $form.attr('method'),
          data: $form.serialize(),
          success: function() { alert('Message sent!') },
          error: function(_, _, text) { alert('ERROR:' + text) }
        });
      });

      // when user types @, show possible user names
      var users = <%= SamsonFlowdock::FlowdockService.new(@deploy).users.to_json.html_safe %>;
      $input.mentionsInput({
        // prefill with what is already there
        defaultValue: $input.val(),

        // when user types after the @ filer down the possible users
        onDataRequest: function (mode, query, callback) {
          var filtered = _.filter(users, function (user) {
            return user.name.toLowerCase().indexOf(query.toLowerCase()) > -1;
          });
          callback.call(this, filtered);
        }
      });
    });
  </script>
<% end %>
